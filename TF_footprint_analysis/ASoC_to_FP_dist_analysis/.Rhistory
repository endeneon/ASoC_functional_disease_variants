ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
}
celltype='CN20'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
celltype='NSC20'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
celltype='CN'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
celltype='NSC'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
names(combined_ASoC_enrich_per_TFfp)
celltype='DN'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
celltype='GA'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
celltype='IPS'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
celltype='CN20'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype_name, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
celltype='NSC20'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype_name, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
celltype='CN'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype_name, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
celltype='NSC'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype_name, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
celltype='DN'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype_name, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
celltype='GA'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype_name, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
celltype='IPS'
celltype_name = convert.tb$new[convert.tb$orig==celltype]
enrich_by_TF = combined_ASoC_enrich_per_TFfp[[celltype]]
enrich_by_TF$p_adj = p.adjust(10^(-enrich_by_TF$log10_pval),method = 'fdr')
log10_pval_cutoff = min(filter(enrich_by_TF, p_adj<0.05)$log10_pval)
pdf(paste0('~/Downloads/ASoC/analysis/non_vs_asoc/',celltype,'_ASoC_enrich_per_TFfp.pdf'),
width = 8, height = 6)
ggplot(enrich_by_TF, aes(x=log10_pval, y=2^log2_OR, label = ifelse(p_adj<0.05,TF,''))) +
geom_point(color = ifelse(enrich_by_TF$p_adj<0.05,'red','black')) + geom_text_repel(size = 3) +
geom_hline(yintercept = 1, color='blue') + geom_vline(xintercept = log10_pval_cutoff, color='brown1', linetype="dashed") +
labs(x = expression('-log'[10]*'(p value)'), y = 'odds ratio', title = paste(celltype_name, 'ASoC enrichment in TF footprints')) +
theme_classic() + theme(axis.text=element_text(size=16), axis.title=element_text(size=18),
title = element_text(size=16))
dev.off()
setwd("~/Downloads/ASoC/analysis/ASoC_TFfp_dist")
snp_file = paste0('~/Downloads/ASoC/data/ASoC_per_celltype/',celltype,'_core8_w_FDR0.05.bed')
footprint_file = paste0('~/Downloads/ASoC/TF_motifs/footprint_jaspar_hsap_redundant/',
celltype,'_merged_footprint.jaspar2018_hsapiens.dnase2tf_fdr0.05.bed')
ASoC_snp = as_tibble(fread(file = paste0('~/Downloads/ASoC/data/ASoC_per_celltype/',celltype,'_w_FDR.txt'),
sep = '\t',header = T,na.strings = "NA"))
celltype = 'CN'
snp_file = paste0('~/Downloads/ASoC/data/ASoC_per_celltype/',celltype,'_core8_w_FDR0.05.bed')
footprint_file = paste0('~/Downloads/ASoC/TF_motifs/footprint_jaspar_hsap_redundant/',
celltype,'_merged_footprint.jaspar2018_hsapiens.dnase2tf_fdr0.05.bed')
ASoC_snp = as_tibble(fread(file = paste0('~/Downloads/ASoC/data/ASoC_per_celltype/',celltype,'_w_FDR.txt'),
sep = '\t',header = T,na.strings = "NA"))
ASoC_snp = as_tibble(fread(file = snp_file, sep = '\t',header = T,na.strings = "NA"))
make.ranges = function(df, metadata){
dfRanges <- GRanges(seqnames = df$chr,
ranges = IRanges(start = df$start,
end = df$end))
for(m in metadata){
dfRanges <- plyranges::mutate(dfRanges, !!m := unname(df[,m]))
}
return(dfRanges)
}
celltype = 'CN'
snp_file = paste0('~/Downloads/ASoC/data/ASoC_per_celltype/',celltype,'_core8_w_FDR0.05.bed')
footprint_file = paste0('~/Downloads/ASoC/TF_motifs/footprint_jaspar_hsap_redundant/',
celltype,'_merged_footprint.jaspar2018_hsapiens.dnase2tf_fdr0.05.bed')
ASoC_snp = as_tibble(fread(file = snp_file, sep = '\t',header = T,na.strings = "NA"))
ASoC_snp = as_tibble(fread(file = snp_file, sep = '\t',header = F,na.strings = "NA"))
head(ASoC_snp)
ASoC_snp = as_tibble(fread(file = snp_file, sep = '\t',header = F,na.strings = "NA"),
col.names = c('chr','start','end','rsID','FDR','dp','ref','alt'))
ASoC_snp = as_tibble(fread(file = snp_file, sep = '\t',header = F,na.strings = "NA"),
col.names = c('chr','start','end','rsID','FDR','dp','ref','alt'))
View(ASoC_snp)
ASoC_snp = as_tibble(fread(file = snp_file, sep = '\t',header = F,na.strings = "NA",
col.names = c('chr','start','end','rsID','FDR','dp','ref','alt')))
snpRanges = make.ranges(ASoC_snp, c('rsID','FDR'))
merged_footprint = as_tibble(fread(file = footprint_file, sep = '\t', header = F,
col.names = c('chr','start','end','TF','score','strand')))
tfRanges = make.ranges(merged_footprint, c('TF'))
dist = distanceToNearest(snpRanges,tfRanges)
ASoC_snp$dist = dist@elementMetadata$distance
View(ASoC_snp)
sum(ASoC_snp$dist==0)
sum(ASoC_snp$dist==0)/nrow(ASoC_snp)
full_snp = as_tibble(fread(file = '~/Downloads/ASoC/data/ASoC_per_celltype/CN_core8_w_FDR.bed',
sep = '\t',header = F,na.strings = "NA",
col.names = c('chr','start','end','rsID','FDR','dp','ref','alt')))
ful_snpRanges = make.ranges(full_snp, c('rsID','FDR'))
full_snpRanges = ful_snpRanges
rm(ful_snpRanges)
dist = distanceToNearest(full_snpRanges,tfRanges)
full_snp$dist = dist@elementMetadata$distance
fisher_enrich = function(snp.df, dist, dist_cutoff = 0){
snp.df$dist = dist
ASoC_snp = filter(snp.df,asoc==1)
nonASoC_snp = filter(snp.df,asoc==0)
f1 = sum(ASoC_snp$dist <= dist_cutoff)
f3 = dim(ASoC_snp)[1]-f1
f2 = sum(nonASoC_snp$dist <= dist_cutoff)
f4 = dim(nonASoC_snp)[1]-f2
fisher_tb = matrix(c(f1,f2,f3,f4),nrow = 2)
res = fisher.test(fisher_tb)
return(list(tb = fisher_tb,log2_OR = log2(res$estimate), log10_pval = -log10(res$p.value)))
}
full_snp = mutate(full_snp, asoc = ifelse(FDR<0.05,1,0))
fisher_stats = fisher_enrich(ocr_snp,dist,dist_cutoff = 0)
fisher_enrich = function(snp.df, dist_cutoff = 0){
ASoC_snp = filter(snp.df,asoc==1)
nonASoC_snp = filter(snp.df,asoc==0)
f1 = sum(ASoC_snp$dist <= dist_cutoff)
f3 = dim(ASoC_snp)[1]-f1
f2 = sum(nonASoC_snp$dist <= dist_cutoff)
f4 = dim(nonASoC_snp)[1]-f2
fisher_tb = matrix(c(f1,f2,f3,f4),nrow = 2)
res = fisher.test(fisher_tb)
return(list(tb = fisher_tb,log2_OR = log2(res$estimate), log10_pval = -log10(res$p.value)))
}
fisher_stats = fisher_enrich(full_snp,dist_cutoff = 0)
fisher_stats$tb
745+1647
fisher_stats$log2_OR
fisher_stats$log10_pval
fisher.test(fisher_stats$tb)
fisher.test(fisher_stats$tb)$p.value
full_snp = as_tibble(fread(file = '~/Downloads/ASoC/data/ASoC_per_celltype/CN20_w_FDR.bed',
sep = '\t',header = F,na.strings = "NA",
col.names = c('chr','start','end','rsID','FDR','dp','ref','alt')))
full_snp = as_tibble(fread(file = '~/Downloads/ASoC/data/ASoC_per_celltype/CN20_w_FDR.bed',
sep = '\t',header = F,na.strings = "NA",
col.names = c('chr','start','end','rsID','FDR','strand')))
full_snpRanges = make.ranges(full_snp, c('rsID','FDR'))
dist = distanceToNearest(full_snpRanges,tfRanges)
full_snp$dist = dist@elementMetadata$distance
full_snp = mutate(full_snp, asoc = ifelse(FDR<0.05,1,0))
fisher_stats = fisher_enrich(full_snp,dist_cutoff = 0)
fisher_stats$tb
1493+4118
1493/5611
fisher.test(fisher_stats$tb)
fisher.test(fisher_stats$tb)$p.value
dist_plot <- function(stats.df, title_text){
plot1 <- ggplot(stats.df, aes(log10(dist+1))) +
geom_histogram(bins = 30) +
labs(x=expression('log'[10]*'(distance of SNP from nearest TF footprint + 1)'),
y=expression('count'),title = title_text) +
theme_classic() +
theme(axis.text=element_text(size=14), axis.title=element_text(size=16),
plot.title = element_text(size=16))
print(plot1)
}
dist_plot(ASoC_snp)
dist_plot(ASoC_snp,'iN-Glut Core 8')
covert_tb = data.frame(orig=c('NSC','CN','DN','GA','IPS'),
new=c('NPC Core 8','iN-Glut Core 8','iN-DN Core 8','iN-GA Core 8','iPS Core 8'))
celltype = 'NSC'
View(covert_tb)
title_text = covert_tb$new[covert_tb$orig==celltype]
snp_file = paste0('~/Downloads/ASoC/data/ASoC_per_celltype/',celltype,'_core8_w_FDR0.05.bed')
footprint_file = paste0('~/Downloads/ASoC/TF_motifs/footprint_jaspar_hsap_redundant/',
celltype,'_merged_footprint.jaspar2018_hsapiens.dnase2tf_fdr0.05.bed')
ASoC_snp = as_tibble(fread(file = snp_file, sep = '\t',header = F,na.strings = "NA",
col.names = c('chr','start','end','rsID','FDR','dp','ref','alt')))
snpRanges = make.ranges(ASoC_snp, c('rsID','FDR'))
merged_footprint = as_tibble(fread(file = footprint_file, sep = '\t', header = F,
col.names = c('chr','start','end','TF','score','strand')))
tfRanges = make.ranges(merged_footprint, c('TF'))
dist = distanceToNearest(snpRanges,tfRanges)
ASoC_snp$dist = dist@elementMetadata$distance
dist_plot(ASoC_snp,title_text)
getwd()
dist_plot <- function(stats.df, title_text){
plot1 <- ggplot(stats.df, aes(log10(dist+1))) +
geom_histogram(bins = 30) +
labs(x=expression('log'[10]*'(distance of SNP from nearest TF footprint + 1)'),
y=expression('count'),title = title_text) +
theme_classic() +
theme(axis.text=element_text(size=14), axis.title=element_text(size=16,face = 'bold'),
plot.title = element_text(size=16,face = 'bold'))
print(plot1)
}
pdf(paste0('~/Downloads/ASoC/analysis/ASoC_TFfp_dist/new_figs/dist_',
celltype,'8_ASoC_fp.pdf'),width = 6,height = 5)
dist_plot(ASoC_snp,title_text)
dev.off()
celltype = 'CN'
title_text = covert_tb$new[covert_tb$orig==celltype]
snp_file = paste0('~/Downloads/ASoC/data/ASoC_per_celltype/',celltype,'_core8_w_FDR0.05.bed')
footprint_file = paste0('~/Downloads/ASoC/TF_motifs/footprint_jaspar_hsap_redundant/',
celltype,'_merged_footprint.jaspar2018_hsapiens.dnase2tf_fdr0.05.bed')
ASoC_snp = as_tibble(fread(file = snp_file, sep = '\t',header = F,na.strings = "NA",
col.names = c('chr','start','end','rsID','FDR','dp','ref','alt')))
snpRanges = make.ranges(ASoC_snp, c('rsID','FDR'))
merged_footprint = as_tibble(fread(file = footprint_file, sep = '\t', header = F,
col.names = c('chr','start','end','TF','score','strand')))
tfRanges = make.ranges(merged_footprint, c('TF'))
dist = distanceToNearest(snpRanges,tfRanges)
ASoC_snp$dist = dist@elementMetadata$distance
# sum(ASoC_snp$dist==0)/nrow(ASoC_snp)
pdf(paste0('~/Downloads/ASoC/analysis/ASoC_TFfp_dist/new_figs/dist_',
celltype,'8_ASoC_fp.pdf'),width = 6,height = 5)
dist_plot(ASoC_snp,title_text)
dev.off()
celltype = 'DN'
title_text = covert_tb$new[covert_tb$orig==celltype]
snp_file = paste0('~/Downloads/ASoC/data/ASoC_per_celltype/',celltype,'_core8_w_FDR0.05.bed')
footprint_file = paste0('~/Downloads/ASoC/TF_motifs/footprint_jaspar_hsap_redundant/',
celltype,'_merged_footprint.jaspar2018_hsapiens.dnase2tf_fdr0.05.bed')
ASoC_snp = as_tibble(fread(file = snp_file, sep = '\t',header = F,na.strings = "NA",
col.names = c('chr','start','end','rsID','FDR','dp','ref','alt')))
snpRanges = make.ranges(ASoC_snp, c('rsID','FDR'))
merged_footprint = as_tibble(fread(file = footprint_file, sep = '\t', header = F,
col.names = c('chr','start','end','TF','score','strand')))
tfRanges = make.ranges(merged_footprint, c('TF'))
dist = distanceToNearest(snpRanges,tfRanges)
ASoC_snp$dist = dist@elementMetadata$distance
# sum(ASoC_snp$dist==0)/nrow(ASoC_snp)
pdf(paste0('~/Downloads/ASoC/analysis/ASoC_TFfp_dist/new_figs/dist_',
celltype,'8_ASoC_fp.pdf'),width = 6,height = 5)
dist_plot(ASoC_snp,title_text)
dev.off()
celltype = 'GA'
title_text = covert_tb$new[covert_tb$orig==celltype]
snp_file = paste0('~/Downloads/ASoC/data/ASoC_per_celltype/',celltype,'_core8_w_FDR0.05.bed')
footprint_file = paste0('~/Downloads/ASoC/TF_motifs/footprint_jaspar_hsap_redundant/',
celltype,'_merged_footprint.jaspar2018_hsapiens.dnase2tf_fdr0.05.bed')
ASoC_snp = as_tibble(fread(file = snp_file, sep = '\t',header = F,na.strings = "NA",
col.names = c('chr','start','end','rsID','FDR','dp','ref','alt')))
snpRanges = make.ranges(ASoC_snp, c('rsID','FDR'))
merged_footprint = as_tibble(fread(file = footprint_file, sep = '\t', header = F,
col.names = c('chr','start','end','TF','score','strand')))
tfRanges = make.ranges(merged_footprint, c('TF'))
dist = distanceToNearest(snpRanges,tfRanges)
ASoC_snp$dist = dist@elementMetadata$distance
# sum(ASoC_snp$dist==0)/nrow(ASoC_snp)
pdf(paste0('~/Downloads/ASoC/analysis/ASoC_TFfp_dist/new_figs/dist_',
celltype,'8_ASoC_fp.pdf'),width = 6,height = 5)
dist_plot(ASoC_snp,title_text)
dev.off()
dist_plot <- function(stats.df, title_text){
plot1 <- ggplot(stats.df, aes(log10(dist+1))) +
geom_histogram(bins = 30) +
labs(x=expression('log'[10]*'(distance of SNP from nearest TF footprint + 1)'),
y=expression('count'),title = title_text) +
theme_classic() +
theme(axis.text=element_text(size=14), axis.title=element_text(size=16),
plot.title = element_text(size=16,face = 'bold'))
print(plot1)
}
celltype = 'IPS'
title_text = covert_tb$new[covert_tb$orig==celltype]
snp_file = paste0('~/Downloads/ASoC/data/ASoC_per_celltype/',celltype,'_core8_w_FDR0.05.bed')
footprint_file = paste0('~/Downloads/ASoC/TF_motifs/footprint_jaspar_hsap_redundant/',
celltype,'_merged_footprint.jaspar2018_hsapiens.dnase2tf_fdr0.05.bed')
ASoC_snp = as_tibble(fread(file = snp_file, sep = '\t',header = F,na.strings = "NA",
col.names = c('chr','start','end','rsID','FDR','dp','ref','alt')))
snpRanges = make.ranges(ASoC_snp, c('rsID','FDR'))
merged_footprint = as_tibble(fread(file = footprint_file, sep = '\t', header = F,
col.names = c('chr','start','end','TF','score','strand')))
tfRanges = make.ranges(merged_footprint, c('TF'))
dist = distanceToNearest(snpRanges,tfRanges)
ASoC_snp$dist = dist@elementMetadata$distance
# sum(ASoC_snp$dist==0)/nrow(ASoC_snp)
pdf(paste0('~/Downloads/ASoC/analysis/ASoC_TFfp_dist/new_figs/dist_',
celltype,'8_ASoC_fp.pdf'),width = 6,height = 5)
dist_plot(ASoC_snp,title_text)
dev.off()
sum(full_snp$asoc==0)
sum(full_snp$asoc==1)
full_snp$asoc = factor(full_snp$asoc)
ggplot(full_snp, aes(log10(dist+1), stat(width*density), fill=asoc)) +
geom_histogram(bins=20, position = 'dodge') +
labs(x=expression('log'[10]*'(distance of SNP from nearest TF footprint + 1)'),
y=expression('frequency'), fill='SNP type') +
theme_classic() + theme(axis.text=element_text(size=14), axis.title=element_text(size=16),
legend.title = element_text(size=14), legend.text = element_text(size=12))
full_snp$asoc = factor(full_snp$asoc)
ggplot(full_snp, aes(log10(dist+1), stat(width*density), fill=asoc)) +
geom_histogram(bins=20, position = 'dodge') +
labs(x=expression('log'[10]*'(distance of SNP from nearest TF footprint + 1)'),
y=expression('frequency'), fill='SNP type') +
theme_classic() + theme(axis.text=element_text(size=14), axis.title=element_text(size=16),
legend.title = element_text(size=14), legend.text = element_text(size=12))
ggplot(full_snp, aes(log10(dist+1), stat(width*density), fill=asoc)) +
geom_histogram(bins=20, position = 'dodge') +
labs(x=expression('log'[10]*'(distance of SNP from nearest TF footprint + 1)'),
y=expression('frequency'), title = 'iN-Glut 20', fill='SNP type') +
theme_classic() + theme(axis.text=element_text(size=14), axis.title=element_text(size=16),
legend.title = element_text(size=14), legend.text = element_text(size=12),
plot.title = element_text(size=16,face = 'bold'))
full_snp$asoc = factor(full_snp$asoc,levels = c('1','0'))
full_snp$asoc = plyr::revalue(full_snp$asoc, c('1'='ASoC SNP','0'='non-ASoC SNP'))
ggplot(full_snp, aes(log10(dist+1), stat(width*density), fill=asoc)) +
geom_histogram(bins=20, position = 'dodge') +
labs(x=expression('log'[10]*'(distance of SNP from nearest TF footprint + 1)'),
y=expression('frequency'), title = 'iN-Glut 20', fill='SNP type') +
theme_classic() + theme(axis.text=element_text(size=14), axis.title=element_text(size=16),
legend.title = element_text(size=14), legend.text = element_text(size=12),
plot.title = element_text(size=16,face = 'bold'))
fisher_stats$tb
snp_dir = '~/Downloads/ASoC/data/ASoC_per_celltype/'
footprint_dir = '~/Downloads/ASoC/TF_motifs/footprint_jaspar_hsap_redundant/'
make.ranges = function(df, metadata){
dfRanges <- GRanges(seqnames = df$chr,
ranges = IRanges(start = df$start,
end = df$end))
for(m in metadata){
dfRanges <- plyranges::mutate(dfRanges, !!m := unname(df[,m]))
}
return(dfRanges)
}
fisher_enrich = function(snp.df, dist_cutoff = 0){
ASoC_snp = filter(snp.df,asoc==1)
nonASoC_snp = filter(snp.df,asoc==0)
f1 = sum(ASoC_snp$dist <= dist_cutoff)
f3 = dim(ASoC_snp)[1]-f1
f2 = sum(nonASoC_snp$dist <= dist_cutoff)
f4 = dim(nonASoC_snp)[1]-f2
fisher_tb = matrix(c(f1,f2,f3,f4),nrow = 2)
res = fisher.test(fisher_tb)
return(list(tb = fisher_tb,log2_OR = log2(res$estimate), log10_pval = -log10(res$p.value)))
}
full_snp = as_tibble(fread(file = paste0(snp_dir,'CN20_w_FDR.bed'),
sep = '\t',header = F,na.strings = "NA",
col.names = c('chr','start','end','rsID','FDR','strand')))
full_snp = mutate(full_snp, asoc = ifelse(FDR<0.05,1,0))
full_snpRanges = make.ranges(full_snp, c('rsID','FDR'))
merged_footprint = as_tibble(fread(file = paste0(footprint_dir,'CN20_merged_footprint.jaspar2018_hsapiens.dnase2tf_fdr0.05.bed'),
sep = '\t', header = F,
col.names = c('chr','start','end','TF','score','strand')))
tfRanges = make.ranges(merged_footprint, c('TF'))
dist = distanceToNearest(full_snpRanges,tfRanges)
full_snp$dist = dist@elementMetadata$distance
fisher_stats = fisher_enrich(full_snp,dist_cutoff = 0)
fisher_stats$tb
1802+3809
paste0(footprint_dir,'CN20_merged_footprint.jaspar2018_hsapiens.dnase2tf_fdr0.05.bed')
paste0(snp_dir,'CN20_w_FDR.bed')
View(full_snp)
fisher.test(fisher_stats$tb)
fisher.test(fisher_stats$tb)$p.value
ASoC_snp = filter(full_snp,asoc==0)
ASoC_snp = filter(full_snp,asoc==1)
sum(full_snp$dist==0)
sum(ASoC_snp$dist==0)
sum(ASoC_snp$dist>0)
1802/5611
